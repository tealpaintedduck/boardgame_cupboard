[webmock] Handling request: [get http://127.0.0.1:65269/__identify__] (disabled: false)
[webmock] Identified request type (ignored) for [get http://127.0.0.1:65269/__identify__]
[webmock] Handling request: [get http://127.0.0.1:65269/__identify__] (disabled: false)
[webmock] Identified request type (ignored) for [get http://127.0.0.1:65269/__identify__]
[webmock] Handling request: [get http://127.0.0.1:65269/__identify__] (disabled: false)
[webmock] Identified request type (ignored) for [get http://127.0.0.1:65269/__identify__]
[webmock] Handling request: [get http://127.0.0.1:65269/__identify__] (disabled: false)
[webmock] Identified request type (ignored) for [get http://127.0.0.1:65269/__identify__]
[webmock] Handling request: [get http://127.0.0.1:65269/__identify__] (disabled: false)
[webmock] Identified request type (ignored) for [get http://127.0.0.1:65269/__identify__]
[webmock] Handling request: [get http://127.0.0.1:65269/__identify__] (disabled: false)
[webmock] Identified request type (ignored) for [get http://127.0.0.1:65269/__identify__]
[Cassette: 'bgg_api_response_carc'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] (disabled: false)
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] (disabled: false)
  [Cassette: 'bgg_api_response_carc'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 3 interaction(s): { [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/822] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_carc'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] using [:method, :uri]
    [Cassette: 'bgg_api_response_carc'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
    [Cassette: 'bgg_api_response_carc'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
  [Cassette: 'bgg_api_response_carc'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/822] (disabled: false)
  [Cassette: 'bgg_api_response_carc'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/822] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] using [:method, :uri]
    [Cassette: 'bgg_api_response_carc'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
    [Cassette: 'bgg_api_response_carc'] uri (did not match): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
  [Cassette: 'bgg_api_response_carc'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/822] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/822] using [:method, :uri]
    [Cassette: 'bgg_api_response_carc'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/822]
    [Cassette: 'bgg_api_response_carc'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/822]
  [Cassette: 'bgg_api_response_carc'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/822] at index 1: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/822]
  [Cassette: 'bgg_api_response_carc'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 3 interaction(s): { [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/822] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_carc'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] using [:method, :uri]
    [Cassette: 'bgg_api_response_carc'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
    [Cassette: 'bgg_api_response_carc'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
  [Cassette: 'bgg_api_response_carc'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/822] (disabled: false)
  [Cassette: 'bgg_api_response_carc'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/822] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne] using [:method, :uri]
    [Cassette: 'bgg_api_response_carc'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
    [Cassette: 'bgg_api_response_carc'] uri (did not match): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Carcassonne]
  [Cassette: 'bgg_api_response_carc'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/822] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/822] using [:method, :uri]
    [Cassette: 'bgg_api_response_carc'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/822]
    [Cassette: 'bgg_api_response_carc'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/822] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/822]
  [Cassette: 'bgg_api_response_carc'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/822] at index 1: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/822]
[Cassette: 'bgg_api_response_dom'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system}
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"], [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
[Cassette: 'bgg_api_response_dom'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system}
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"], [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Dominion]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] (disabled: false)
  [Cassette: 'bgg_api_response_dom'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] using [:method, :uri]
    [Cassette: 'bgg_api_response_dom'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
    [Cassette: 'bgg_api_response_dom'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
  [Cassette: 'bgg_api_response_dom'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/36218]
[Cassette: 'bgg_api_response_tealpaintedduck'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] => [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"], [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] at index 0: [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (did not match): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[Cassette: 'bgg_api_response_manual_and_import'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 6 interaction(s): { [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"], [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"], [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"], [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] => [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"], [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle]
  [Cassette: 'bgg_api_response_manual_and_import'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/12333]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/12333]
  [Cassette: 'bgg_api_response_manual_and_import'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/12333]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] matches [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] vs [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle]
  [Cassette: 'bgg_api_response_manual_and_import'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t<boardga"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/search?exact=1&search=Twilight%20Struggle]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/12333]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/12333]
  [Cassette: 'bgg_api_response_manual_and_import'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/12333] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/12333]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
  [Cassette: 'bgg_api_response_manual_and_import'] Found matching interaction for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] at index 0: [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_manual_and_import'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (did not match): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_manual_and_import'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_manual_and_import'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_manual_and_import'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[Cassette: 'bgg_api_response_tealpaintedduck'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] => [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"], [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] at index 0: [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (did not match): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[Cassette: 'bgg_api_response_tealpaintedduck'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] => [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"], [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] at index 0: [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (did not match): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[Cassette: 'bgg_api_response_tealpaintedduck'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] => [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"], [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] at index 0: [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (did not match): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[Cassette: 'bgg_api_response_tealpaintedduck'] Initialized with options: {:record=>:once, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :allow_playback_repeats=>true}
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] => [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"], [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] => [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"] }
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] at index 0: [200 "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<items totalitems=\"2\" te"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Found matching interaction for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] at index 0: [200 "<boardgames termsofuse=\"http://boardgamegeek.com/xmlapi/termsofuse\">\n\t\t\t\t\t<board"]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Handling request: [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (did not match): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] matches [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1] vs [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Identified request type (stubbed_by_vcr) for [get https://www.boardgamegeek.com/xmlapi/collection/tealpaintedduck?own=1]
[webmock] Handling request: [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] (disabled: false)
  [Cassette: 'bgg_api_response_tealpaintedduck'] Checking if [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] matches [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] using [:method, :uri]
    [Cassette: 'bgg_api_response_tealpaintedduck'] method (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
    [Cassette: 'bgg_api_response_tealpaintedduck'] uri (matched): current request [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1] vs [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
[webmock] Identified request type (stubbed_by_vcr) for [get http://www.boardgamegeek.com/xmlapi/boardgame/124708,12333?exact=1]
